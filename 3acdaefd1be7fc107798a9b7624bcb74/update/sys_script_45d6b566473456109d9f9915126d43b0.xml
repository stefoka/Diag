<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_nuvo_diag_healthcheck_logs</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Send Logs to Nuvolo Instance</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    var instance =  gs.getProperty('x_nuvo_diag.nuvolo_instance');
    var probe_category = current.probe_category;
    var healthcheck_instance = current.healthcheck_instance.source;
    var healthcheck_type = current.healthcheck_type;
    var result = current.result;
    var error_message = current.error_message;

    gs.info('LogsCheck1' + probe_category);
    gs.info('LogsCheck2' + healthcheck_instance);
    gs.info('LogsCheck3' + healthcheck_type);
    gs.info('LogsCheck4' + result);
    gs.info('LogsCheck5' + error_message);
	gs.info('LogsCheck6' + instance);

    var request = new sn_ws.RESTMessageV2();
    request.setEndpoint('https://' + instance + '.service-now.com/api/now/table/x_nuvo_diag_healthcheck_logs');

    request.setHttpMethod('POST');

    var helper = new x_nuvo_diag.HealthCheckHelper();
    var credentials = JSON.parse(helper.getIntegrationUserCredentials());
    var user = credentials.username;
    var password = credentials.password;


    request.setBasicAuth(user, password);
    request.setRequestHeader("Accept", "application/json");
    request.setRequestHeader('Content-Type', 'application/json');
    var requestBody = JSON.stringify({
        "probe_category": probe_category,
        "healthcheck_instance": healthcheck_instance,
        "healthcheck_type": healthcheck_type,
        "result": result,
        "error_message": error_message,
    });
    request.setRequestBody(requestBody);


    request.execute();



})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>abraham.kannampuzha@nuvolo.com</sys_created_by>
        <sys_created_on>2024-09-25 10:32:24</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>45d6b566473456109d9f9915126d43b0</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>Send Logs to Nuvolo Instance</sys_name>
        <sys_overrides/>
        <sys_package display_value="Diagnostic Tool" source="x_nuvo_diag">3acdaefd1be7fc107798a9b7624bcb74</sys_package>
        <sys_policy/>
        <sys_scope display_value="Diagnostic Tool">3acdaefd1be7fc107798a9b7624bcb74</sys_scope>
        <sys_update_name>sys_script_45d6b566473456109d9f9915126d43b0</sys_update_name>
        <sys_updated_by>Stefan.Popov@nuvolo.com</sys_updated_by>
        <sys_updated_on>2024-09-26 14:40:10</sys_updated_on>
        <template/>
        <when>async_always</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=45d6b566473456109d9f9915126d43b0"/>
</record_update>
