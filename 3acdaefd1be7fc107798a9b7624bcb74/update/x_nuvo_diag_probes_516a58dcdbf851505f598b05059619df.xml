<?xml version="1.0" encoding="UTF-8"?><record_update table="x_nuvo_diag_probes">
    <x_nuvo_diag_probes action="INSERT_OR_UPDATE">
        <active>true</active>
        <description>This probe checks for domain path corruption&#13;
&#13;
OOTB there are records where domain path is empty that will cause issues&#13;
&#13;
(get a list of records we ship in sys_metadata_link)&#13;
&#13;
https://ven01061.service-now.com/sys_metadata_link_list.do?sysparm_query=sys_scope.scopeSTARTSWITHx_nuvo_%5Edirectory%3Dunload%5EORdirectory%3Dupdate&amp;sysparm_view=&#13;
&#13;
Service now script to check for invalid domain path records (pending from tejas)&#13;
&#13;
/* &#13;
    Validate data on the specified table and fix inconsistencies&#13;
*/&#13;
&#13;
// TODO: replace INSERT_TABLENAME_HERE with name of the table on which script will be run&#13;
var tableName = 'INSERT_TABLENAME_HERE';&#13;
&#13;
// Verify tableName is an existing Domain Separated table&#13;
var gr = new GlideRecord('sys_dictionary');&#13;
gr.addQuery('element', 'sys_domain');&#13;
gr.query();&#13;
var tableFound = false;&#13;
while(gr.next()) {&#13;
   if (tableName.equals(gr.name) == true) {&#13;
      tableFound = true;&#13;
      break; &#13;
   }&#13;
}&#13;
&#13;
// Run validation&#13;
if (tableFound) {&#13;
   var pathValidator = new GlideDomainPathValidator();&#13;
   pathValidator.setUpdateProgress(false);&#13;
   if (pathValidator.validateDomainPathData(tableName, true) == true) {&#13;
      gs.log('Data validation successful, and inconsistencies fixed, on table: ' + tableName);&#13;
   } else {&#13;
      gs.log('Data validation unsuccessful and/or could not fix inconsistencies on table: ' + tableName);&#13;
   }&#13;
} else {&#13;
   gs.log('ERROR running script; tableName "' + tableName + '" does not describe a domain separated table');&#13;
}</description>
        <healthcheck_type/>
        <name>Domain Path Check</name>
        <order/>
        <probe_type display_value="ServiceNow">285139dd1ba09510ae5b21b5ec4bcb64</probe_type>
        <remediation/>
        <script><![CDATA[var util = new x_nuvo_diag.DiagnosticUtil();
var metaGR = new GlideRecord('sys_metadata_link');
metaGR.query()
var tableName = 'INSERT_TABLENAME_HERE';

// Verify tableName is an existing Domain Separated table
var gr = new GlideRecord('sys_dictionary');
gr.addQuery('element', 'sys_domain');
gr.query();
var tableFound = false;
while(gr.next()) {
   if (tableName.equals(gr.name) == true) {
      tableFound = true;
      break; 
   }
}

// Run validation
if (tableFound) {
   var pathValidator = new GlideDomainPathValidator();
   pathValidator.setUpdateProgress(false);
   if (pathValidator.validateDomainPathData(tableName, true) == true) {
      //gs.log('Data validation successful, and inconsistencies fixed, on table: ' + tableName);
   } else {
      util.handleOutput('Data Validation Unsuccessful, could not fix inconsistencies on table ' + tableName, 'Warning','ServiceNow');
   }
} else {
   gs.log('ERROR running script; tableName "' + tableName + '" does not describe a domain separated table');
}]]></script>
        <sys_class_name>x_nuvo_diag_probes</sys_class_name>
        <sys_created_by>jake.ye@nuvolo.com</sys_created_by>
        <sys_created_on>2022-07-15 19:23:40</sys_created_on>
        <sys_id>516a58dcdbf851505f598b05059619df</sys_id>
        <sys_mod_count>7</sys_mod_count>
        <sys_name>Domain Path Check</sys_name>
        <sys_package display_value="Diagnostic Tool" source="x_nuvo_diag">3acdaefd1be7fc107798a9b7624bcb74</sys_package>
        <sys_policy/>
        <sys_scope display_value="Diagnostic Tool">3acdaefd1be7fc107798a9b7624bcb74</sys_scope>
        <sys_update_name>x_nuvo_diag_probes_516a58dcdbf851505f598b05059619df</sys_update_name>
        <sys_updated_by>Stefan.Popov@nuvolo.com</sys_updated_by>
        <sys_updated_on>2024-09-17 11:21:26</sys_updated_on>
        <tool>diagnostic</tool>
    </x_nuvo_diag_probes>
</record_update>
